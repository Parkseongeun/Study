
win.

유지보수,가독성을 위해 객체지향프로그래밍함

win 자체가 객체이다.
win도 호출할 수 있는 메소드들이 있다. 
console.log(win)를 해보면 알수있다.

비슷하게 console.log(array.prototype)찍어봐도 배열의 메소드를 알수있다.

<script>
(function(win,$){
  //유효성 검사
  window.studyPj = window.studyPj || {}; // 여기선 {}이 저장 //객체로 쓰겠다.
  var 객체 = {

  }를
  win.studyPj.객체 = {

  } 이렇게
}
</script>
<script>
function(){
  window.studyPj = window.studyPj || {};   // 여기선 window.studyPj이 저장
  window.studyPj.arrayName.init(); //객체를 다른 function에서도 가져다 쓸 수있다.
}
</script>

(function(win,$)
 즉시실행함수에서 win이라는 인자값으로 가져왔기떄문에,
window.객체 아니고
win.객체

this.opts = $.extend({},defParms,(args || {}));
opts 라는 그룹에 빈객체{}를 넣고 defParms 엎고, args를 엎는다(이때 args가(인자값이) 따로 없으면 {}객체로 덮기떄문에 defParms가 덮인다.



------------------------------

* 플러그인 만들기, 생성자함수
$.fn.함수
$.fn 나는 플러그인으로 만들겠다. 선언하는것 
new로 호출하면 this. 로 (객체로 전환이된다)

호출 따로 , 객체prototype 명시적으로 선언

-------------------------------

checkbox radio select
click으로 안하고 (오류생김)
change로 실행

name 끼리 묶는 방식 

prop('checked')는 boolean값으로 리턴해줌 (checked가 됐을때)
attr은 문자열로 가져오는거기때문에 오류가 있을 수 있다.

--------------------------------

과제 : exam10
ie8에서 확인하기.




